package com.osthus.rdfcmap.util;

import org.apache.jena.rdf.model.Property;
import org.apache.jena.rdf.model.Resource;
import org.apache.jena.rdf.model.ResourceFactory;

/**
 * @author Helge Krieg, OSTHUS GmbH
 */
public class AFOUtil
{
	public static final String AFO_ID_PATTERN = "[a-zA-Z_0-9]+";

	public static final String IRI_UV_CHROMATOGRAM_STRUCTURE = "urn:dc:chromatogram:uv:datastructure";
	public static final String IRI_TOTAL_INTENSITY_CHROMATOGRAM_STRUCTURE = "urn:dc:chromatogram:total-intensity:datastructure";
	public static final String IRI_SPECTRUM_STRUCTURE = "urn:dc:spectrum:uv:datastructure";
	public static final String IRI_FULL_SPECTRUM_STRUCTURE = "urn:dc:spectrum:3d:uv:datastructure";
	public static final String IRI_TIC_STRUCTURE = "urn:dc:chromatogram:tic:datastructure";

	public static final String AFO_PREFIX = "http://purl.allotrope.org/";
	public static final String AFO2_PREFIX = "http://www.allotrope.org/";
	public static final String AFX_PREFIX = "http://purl.allotrope.org/ontologies/property#";
	public static final String AFC_PREFIX = "http://purl.allotrope.org/ontologies/common#";
	public static final String AFCQ_PREFIX = "http://purl.allotrope.org/ontologies/common/qualifier#";
	public static final String AFDT_PREFIX = "http://purl.allotrope.org/ontologies/datatype#";
	public static final String AFE_PREFIX = "http://purl.allotrope.org/ontologies/equipment#";
	public static final String AFM_PREFIX = "http://purl.allotrope.org/ontologies/material#";
	public static final String AFR_PREFIX = "http://purl.allotrope.org/ontologies/result#";
	public static final String AFP_PREFIX = "http://purl.allotrope.org/ontologies/process#";
	public static final String AFQ_PREFIX = "http://purl.allotrope.org/ontologies/quality#";
	public static final String AFFN_PREFIX = "http://purl.allotrope.org/ontologies/function#";
	public static final String AFRL_PREFIX = "http://purl.allotrope.org/ontologies/role#";
	public static final String AFRE_PREFIX = "http://purl.allotrope.org/ontologies/realizable#";

	public static final String AFCUR_PREFIX = "http://purl.allotrope.org/ontologies/curation#";
	public static final String AFEC_001_PREFIX = "http://purl.allotrope.org/ontologies/equipment/codelist/001#";
	public static final String AFEC_002_PREFIX = "http://purl.allotrope.org/ontologies/equipment/codelist/002#";
	public static final String AFEC_003_PREFIX = "http://purl.allotrope.org/ontologies/equipment/codelist/003#";
	public static final String AFEC_004_PREFIX = "http://purl.allotrope.org/ontologies/equipment/codelist/004#";
	public static final String AFEC_005_PREFIX = "http://purl.allotrope.org/ontologies/equipment/codelist/005#";
	public static final String AFEC_006_PREFIX = "http://purl.allotrope.org/ontologies/equipment/codelist/006#";

	public static final String AFDC_PREFIX = "http://purl.allotrope.org/ontologies/datacube#";
	public static final String AFMATH_PREFIX = "http://purl.allotrope.org/ontologies/math#";
	public static final String SHACL_PREFIX = "http://www.w3.org/ns/shacl#";
	public static final String QUANTITY_SHAPES_PREFIX = "http://purl.allotrope.org/shapes/qudt#";
	public static final String QUDT_SCHEMA_PREFIX = "http://qudt.org/schema/qudt#";
	public static final String QUDT_SCHEMA_EXT_PREFIX = "http://purl.allotrope.org/ontology/qudt-ext/schema#";
	public static final String QUDT_UNIT_PREFIX = "http://qudt.org/vocab/unit#";
	public static final String QUDT_UNIT_EXT_PREFIX = "http://purl.allotrope.org/ontology/qudt-ext/unit#";
	public static final String QUDT_QUANTITY_EXT_PREFIX = "http://purl.allotrope.org/ontology/qudt-ext/quantity#";
	public static final String RDF_PREFIX = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
	public static final String OWL_PREFIX = "http://www.w3.org/2002/07/owl#";
	public static final String RDFS_PREFIX = "http://www.w3.org/2000/01/rdf-schema#";
	public static final String XSD_PREFIX = "http://www.w3.org/2001/XMLSchema#";
	public static final String SKOS_PREFIX = "http://www.w3.org/2004/02/skos/core#";
	public static final String FOAF_PREFIX = "http://xmlns.com/foaf/0.1/";
	public static final String DCT_PREFIX = "http://purl.org/dc/terms/";
	public static final String AFMAP_PREFIX = "http://purl.allotrope.org/ontologies/mapping#";
	public static final String MAP_PREFIX = "http://purl.allotrope.org/ontologies/mapping/instances#";
	public static final String EXAMPLE_PREFIX = "http://www.example.org#";
	public static final String EXAMPLE2_PREFIX = "http://www.example2.org#";

	public static final String OBO_IN_OWL_PREFIX = "http://www.geneontology.org/formats/oboInOwl#";

	public static final Resource OWL_ONTOLOGY = ResourceFactory.createResource(OWL_PREFIX + "Ontology");
	public static final Property OWL_PRIOR_VERSION = ResourceFactory.createProperty(OWL_PREFIX + "priorVersion");
	public static final Property OWL_VERSION_IRI = ResourceFactory.createProperty(OWL_PREFIX + "versionIRI");
	public static final Property OWL_VERSION_INFO = ResourceFactory.createProperty(OWL_PREFIX + "versionInfo");
	public static final Property OWL_IMPORTS = ResourceFactory.createProperty(OWL_PREFIX + "imports");
	public static final Property DCT_CONTRIBUTOR = ResourceFactory.createProperty(DCT_PREFIX + "contributor");
	public static final Property DCT_ISSUED = ResourceFactory.createProperty(DCT_PREFIX + "issued");
	public static final Property DCT_RIGHTS = ResourceFactory.createProperty(DCT_PREFIX + "rights");
	public static final Property DCT_REPLACES = ResourceFactory.createProperty(DCT_PREFIX + "replaces");
	public static final Property DCT_REPLACED_BY = ResourceFactory.createProperty(DCT_PREFIX + "replacedBy");
	public static final Resource RES_OSTHUS = ResourceFactory.createResource("http://www.osthus.com");

	public static final String ADF_DC_HDF_PREFIX = "http://purl.allotrope.org/ontologies/datacube-hdf-map#";
	public static final String ADF_DC_PREFIX = "http://purl.allotrope.org/ontologies/datacube#";
	public static final String ADF_DP_PREFIX = "http://purl.allotrope.org/ontologies/datapackage#";
	public static final String AFS_PREFIX = "http://purl.allotrope.org/shapes/core#";
	public static final String AFS_C_PREFIX = "http://purl.allotrope.org/shapes/common#";
	public static final String AFS_DC_PREFIX = "http://purl.allotrope.org/shapes/datacube#";
	public static final String AFS_R_PREFIX = "http://purl.allotrope.org/shapes/resources#";
	public static final String AFS_HR_PREFIX = "http://purl.allotrope.org/shapes/resources#";
	public static final String AFS_Q_PREFIX = "http://purl.allotrope.org/shapes/qudt#";
	public static final String DCTYPE_PREFIX = "http://purl.org/dc/dcmitype/";
	public static final String HDF_PREFIX = "http://purl.allotrope.org/ontologies/hdf5/1.8#";
	public static final String LDP_PREFIX = "http://purl.org/ldp/";
	public static final String OBO_PREFIX = "http://purl.obolibrary.org/obo/";
	public static final String OBI_PREFIX = OBO_PREFIX + "OBI";
	public static final String BFO_PREFIX = OBO_PREFIX + "BFO";
	public static final String RO_PREFIX = OBO_PREFIX + "RO";
	public static final String IAO_PREFIX = OBO_PREFIX + "IAO";
	public static final String CHEBI_PREFIX = OBO_PREFIX + "CHEBI";
	public static final String CHMO_PREFIX = OBO_PREFIX + "CHMO";
	public static final String CL_PREFIX = OBO_PREFIX + "CL";
	public static final String ENVO_PREFIX = OBO_PREFIX + "ENVO";
	public static final String GAZ_PREFIX = OBO_PREFIX + "GAZ";
	public static final String GO_PREFIX = OBO_PREFIX + "GO";
	public static final String MOP_PREFIX = OBO_PREFIX + "MOP";
	public static final String NCBI_PREFIX = OBO_PREFIX + "NCBITaxon";
	public static final String PATO_PREFIX = OBO_PREFIX + "PATO";
	public static final String UBERON_PREFIX = OBO_PREFIX + "UBERON";
	public static final String UO_PREFIX = OBO_PREFIX + "UO";
	public static final String MS_PREFIX = OBO_PREFIX + "MS";
	public static final String OPS_PREFIX = "http://www.openphacts.org/units/";
	public static final String PREMIS_PREFIX = "http://www.loc.gov/premis/rdf/v1#";
	public static final String QB_PREFIX = "http://purl.org/linked-data/cube#";
	public static final String TIME_PREFIX = "http://www.w3.org/2006/time#";
	public static final String VOID_PREFIX = "http://rdfs.org/ns/void#";
	public static final String XML_PREFIX = "http://www.w3.org/xml/1998/namespace";
	public static final String PAV_PREFIX = "http://purl.org/pav/";
	public static final String PROV_PREFIX = "http://www.w3.org/ns/prov#";
	public static final String ORG_PREFIX = "http://www.w3.org/ns/org#";
	public static final String VCARD_PREFIX = "http://www.w3.org/2006/vcard/ns#";
	public static final String COLLECTION_ONTOLOGY_PREFIX = "http://purl.org/co/";
	public static final String OPENMATH_PREFIX = "http://www.openmath.org/cd/";
	public static final String MATHML_PREFIX = "http://www.w3.org/1998/Math/MathML#";
	public static final String ORE_PREFIX = "http://www.openarchives.org/ore/terms/";

	public static final Resource AFC_ATTRIBUTION = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/common/attribution");
	public static final Resource AFE_ATTRIBUTION = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/equipment/attribution");
	public static final Resource AFM_ATTRIBUTION = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/material/attribution");
	public static final Resource AFP_ATTRIBUTION = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/process/attribution");
	public static final Resource AFX_ATTRIBUTION = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/property/attribution");
	public static final Resource AFR_ATTRIBUTION = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/result/attribution");
	public static final Resource AFP_COPYRIGHT = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/process/copyright");
	public static final Resource AFX_COPYRIGHT = ResourceFactory.createResource("http://www.allotrope.org/ontologies/relation/copyright");
	public static final Resource AFM_COPYRIGHT = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/material/copyright");
	public static final Resource AFE_COPYRIGHT = ResourceFactory.createResource("http://www.allotrope.org/ontologies/equipment/copyright");
	public static final Resource AFR_COPYRIGHT = ResourceFactory.createResource("http://www.allotrope.org/ontologies/result/copyright");
	public static final Resource RES_TURTLE = ResourceFactory.createResource("http://www.w3.org/ns/formats/Turtle");
	public static final Resource RES_TIME = ResourceFactory.createResource("http://www.w3.org/2006/time");
	public static final Resource RES_AFE = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/equipment");
	public static final Resource RES_AFC = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/common");
	public static final Resource RES_AFP = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/process");
	public static final Resource RES_AFX = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/property");
	public static final Resource RES_AFM = ResourceFactory.createResource("http://purl.allotrope.org/ontologies/material");
	public static final Resource RES_FOAF = ResourceFactory.createResource("http://xmlns.com/foaf/0.1/");
	public static final Resource RES_SKOS = ResourceFactory.createResource("http://www.w3.org/2004/02/skos/core");
	public static final Resource RES_PROV = ResourceFactory.createResource("http://www.w3.org/ns/prov");
	public static final Resource RES_CMOOWL = ResourceFactory.createResource("http://purl.obolibrary.org/obo/cmo-xp.owl");
	public static final Resource RES_OBOOWL = ResourceFactory.createResource("http://purl.obolibrary.org/obo/ms/src/ms.obo.owl");

	public static final String SHAPE_IRI_ABSORBANCE = QUANTITY_SHAPES_PREFIX + "ArbitraryUnitValue";
	public static final String SHAPE_IRI_INTENSITY = QUANTITY_SHAPES_PREFIX + "ArbitraryUnitValue";
	public static final String SHAPE_IRI_TOTAL_ION_CURRENT = QUANTITY_SHAPES_PREFIX + "ArbitraryUnitValue";
	public static final String SHAPE_IRI_WAVELENGTH = QUANTITY_SHAPES_PREFIX + "NanometerValue";
	public static final String SHAPE_IRI_RETENTION_TIME = QUANTITY_SHAPES_PREFIX + "MinuteTimeValue";
	public static final String SHAPE_IRI_TIME = QUANTITY_SHAPES_PREFIX + "MinuteTimeValue";
	public static final String SHAPE_IRI_ION_COUNT = QUANTITY_SHAPES_PREFIX + "IonCountValue";
	public static final String SHAPE_IRI_MPERZ = QUANTITY_SHAPES_PREFIX + "MassPerChargeValue";
	public static final String SHAPE_IRI_CAPILLARY_CURRENT = QUANTITY_SHAPES_PREFIX + "CapillaryCurrentValue";
	public static final String SHAPE_IRI_CURRENT = QUANTITY_SHAPES_PREFIX + "CurrentValue";
	public static final String SHAPE_IRI_DEGREECELSIUS = QUANTITY_SHAPES_PREFIX + "DegreeCelsiusValue";
	public static final String SHAPE_IRI_VOLTAGE = QUANTITY_SHAPES_PREFIX + "VoltageValue";

	public static final Resource OWL_CLASS = ResourceFactory.createResource(OWL_PREFIX + "Class");
	public static final Resource OWL_NAMED_INDIVIDUAL = ResourceFactory.createResource(OWL_PREFIX + "NamedIndividual");
	public static final Resource OWL_OBJECT_PROPERTY = ResourceFactory.createResource(OWL_PREFIX + "ObjectProperty");
	public static final Resource OWL_DATATYPE_PROPERTY = ResourceFactory.createResource(OWL_PREFIX + "DatatypeProperty");
	public static final Resource OWL_ANNOTATION_PROPERTY = ResourceFactory.createResource(OWL_PREFIX + "AnnotationProperty");
	public static final Resource OWL_RESTRICTION = ResourceFactory.createResource(OWL_PREFIX + "Restriction");
	public static final Resource OWL_AXIOM = ResourceFactory.createResource(OWL_PREFIX + "Axiom");
	public static final Resource OWL_THING = ResourceFactory.createResource(OWL_PREFIX + "Thing");
	public static final Property OWL_ALL_VALUES_FROM = ResourceFactory.createProperty(OWL_PREFIX + "allValuesFrom");
	public static final Resource OWL_ALL_DIFFERENT = ResourceFactory.createResource(OWL_PREFIX + "AllDifferent");
	public static final Property OWL_SOME_VALUES_FROM = ResourceFactory.createProperty(OWL_PREFIX + "someValuesFrom");
	public static final Property OWL_CARDINALITY = ResourceFactory.createProperty(OWL_PREFIX + "cardinality");
	public static final Property OWL_MIN_CARDINALITY = ResourceFactory.createProperty(OWL_PREFIX + "minCardinality");
	public static final Property OWL_MAX_CARDINALITY = ResourceFactory.createProperty(OWL_PREFIX + "maxCardinality");
	public static final Property OWL_ON_CLASS = ResourceFactory.createProperty(OWL_PREFIX + "onClass");
	public static final Property OWL_ON_PROPERTY = ResourceFactory.createProperty(OWL_PREFIX + "onProperty");
	public static final Resource RDFS_DATATYPE = ResourceFactory.createResource(RDFS_PREFIX + "Datatype");
	public static final Property RDF_TYPE = ResourceFactory.createProperty(RDF_PREFIX + "type");
	public static final Property RDF_FIRST = ResourceFactory.createProperty(RDF_PREFIX + "first");
	public static final Property RDF_REST = ResourceFactory.createProperty(RDF_PREFIX + "rest");
	public static final Resource RDF_NIL = ResourceFactory.createResource(RDF_PREFIX + "nil");
	public static final Property RDFS_SUBCLASS_OF = ResourceFactory.createProperty(RDFS_PREFIX + "subClassOf");
	public static final Property RDFS_SUBPROPERTY_OF = ResourceFactory.createProperty(RDFS_PREFIX + "subPropertyOf");
	public static final Property RDFS_DOMAIN = ResourceFactory.createProperty(RDFS_PREFIX + "domain");
	public static final Property RDFS_RANGE = ResourceFactory.createProperty(RDFS_PREFIX + "range");
	public static final Property XSD_INTEGER = ResourceFactory.createProperty(XSD_PREFIX + "integer");
	public static final Property XSD_BOOLEAN = ResourceFactory.createProperty(XSD_PREFIX + "boolean");
	public static final Property XSD_DOUBLE = ResourceFactory.createProperty(XSD_PREFIX + "double");
	public static final Property XSD_STRING = ResourceFactory.createProperty(XSD_PREFIX + "string");
	public static final Property XSD_DATETIME = ResourceFactory.createProperty(XSD_PREFIX + "dateTime");

	public static final Property OBO_DEFINITION = ResourceFactory.createProperty(OBO_PREFIX + "IAO_0000115");
	public static final Property OBO_DEFINITION_DISGUISED = ResourceFactory.createProperty(CmapUtil.URN_UUID + "IAO_0000115");
	public static final Property OBO_ELUCIDATION = ResourceFactory.createProperty(OBO_PREFIX + "IAO_0000600");
	public static final Property OBO_ELUCIDATION_DISGUISED = ResourceFactory.createProperty(CmapUtil.URN_UUID + "IAO_0000600");
	public static final Property OBO_EXAMPLE = ResourceFactory.createProperty(OBO_PREFIX + "IAO_0000112");
	public static final Property OBO_EXAMPLE_DISGUISED = ResourceFactory.createProperty(CmapUtil.URN_UUID + "IAO_0000112");
	public static final Property OBO_EDITOR_PREFERRED_LABEL = ResourceFactory.createProperty(OBO_PREFIX + "IAO_0000111");

	public static final Property QUDT_NUMERIC_VALUE = ResourceFactory.createProperty(QUDT_SCHEMA_PREFIX + "numericValue");
	public static final Property QUDT_UNIT = ResourceFactory.createProperty(QUDT_SCHEMA_PREFIX + "unit");
	public static final Resource QUDT_UNIT_MINUTE_TIME = ResourceFactory.createResource(QUDT_UNIT_PREFIX + "MinuteTime");
	public static final Resource QUDT_UNIT_DIMENSIONLESS = ResourceFactory.createResource(QUDT_SCHEMA_PREFIX + "DimensionlessUnit");
	public static final Resource QUDT_EXT_UNIT_MILLI_GRAM = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "Milligram");
	public static final Resource QUDT_EXT_ARBITRARY_UNIT = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "ArbitraryUnit");
	public static final Resource QUDT_EXT_NANOMETER = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "Nanometer");
	public static final Resource QUDT_EXT_COUNT = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "Count");
	public static final Resource QUDT_UNIT_DEGREECELSIUS = ResourceFactory.createResource(QUDT_SCHEMA_PREFIX + "DegreeCelsius");
	public static final Resource QUDT_UNIT_VOLT = ResourceFactory.createResource(QUDT_SCHEMA_PREFIX + "Volt");
	public static final Resource QUDT_EXT_MPERZ = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "MassPerCharge");
	public static final Resource QUDT_EXT_MILLIAMPERE = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "MilliAmpere");
	public static final Resource QUDT_EXT_MICROAMPERE = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "MicroAmpere");
	public static final Resource QUDT_EXT_ABSORBANCE_UNIT = ResourceFactory.createResource(QUDT_UNIT_EXT_PREFIX + "AbsorbanceUnit");

	public static final Resource SHACL_NODE_SHAPE = ResourceFactory.createResource(SHACL_PREFIX + "NodeShape");
	public static final Resource SHACL_PROPERTY_SHAPE = ResourceFactory.createResource(SHACL_PREFIX + "PropertyShape");
	public static final Resource SHACL_IRI = ResourceFactory.createResource(SHACL_PREFIX + "IRI");
	public static final Resource SHACL_LITERAL = ResourceFactory.createResource(SHACL_PREFIX + "Literal");
	public static final Resource SHACL_BLANK_NODE = ResourceFactory.createResource(SHACL_PREFIX + "BlankNode");
	public static final Property SHACL_DATATYPE = ResourceFactory.createProperty(SHACL_PREFIX + "datatype");
	public static final Property SHACL_HAS_VALUE = ResourceFactory.createProperty(SHACL_PREFIX + "hasValue");
	public static final Property SHACL_NODEKIND = ResourceFactory.createProperty(SHACL_PREFIX + "nodeKind");
	public static final Property SHACL_NODE = ResourceFactory.createProperty(SHACL_PREFIX + "node");
	public static final Property SHACL_MIN_COUNT = ResourceFactory.createProperty(SHACL_PREFIX + "minCount");
	public static final Property SHACL_MAX_COUNT = ResourceFactory.createProperty(SHACL_PREFIX + "maxCount");
	public static final Property SHACL_QUALIFIED_MIN_COUNT = ResourceFactory.createProperty(SHACL_PREFIX + "qualifiedMinCount");
	public static final Property SHACL_QUALIFIED_MAX_COUNT = ResourceFactory.createProperty(SHACL_PREFIX + "qualifiedMaxCount");
	public static final Property SHACL_QUALIFIED_VALUE_SHAPE = ResourceFactory.createProperty(SHACL_PREFIX + "qualifiedValueShape");
	public static final Property SHACL_PREDICATE = ResourceFactory.createProperty(SHACL_PREFIX + "predicate");
	public static final Property SHACL_PATTERN = ResourceFactory.createProperty(SHACL_PREFIX + "pattern");
	public static final Property SHACL_PROPERTY = ResourceFactory.createProperty(SHACL_PREFIX + "property");
	public static final Property SHACL_PATH = ResourceFactory.createProperty(SHACL_PREFIX + "path");
	public static final Property SHACL_INVERSE_PATH = ResourceFactory.createProperty(SHACL_PREFIX + "inversePath");
	public static final Property SHACL_CLASS = ResourceFactory.createProperty(SHACL_PREFIX + "class");
	public static final Property SHACL_SHAPE = ResourceFactory.createProperty(SHACL_PREFIX + "Shape");
	public static final Property SHACL_SCOPE_CLASS = ResourceFactory.createProperty(SHACL_PREFIX + "scopeClass");
	public static final Property SHACL_VALUE_CLASS = ResourceFactory.createProperty(SHACL_PREFIX + "valueClass");
	public static final Property SHACL_CLOSED = ResourceFactory.createProperty(SHACL_PREFIX + "closed");
	public static final Property SHACL_IGNORED_PROPERTIES = ResourceFactory.createProperty(SHACL_PREFIX + "ignoredProperties");
	public static final Property SHACL_TARGET_CLASS = ResourceFactory.createProperty(SHACL_PREFIX + "targetClass");
	public static final Property SHACL_TARGET_NODE = ResourceFactory.createProperty(SHACL_PREFIX + "targetNode");
	public static final Property SHACL_NAME = ResourceFactory.createProperty(SHACL_PREFIX + "name");
	public static final Property SHACL_DESCRIPTION = ResourceFactory.createProperty(SHACL_PREFIX + "description");
	public static final Property SHACL_IN = ResourceFactory.createProperty(SHACL_PREFIX + "in");
	public static final Property SHACL_ZERO_OR_MORE_PATH = ResourceFactory.createProperty(SHACL_PREFIX + "zeroOrMorePath");

	public static final Property SKOS_PREF_LABEL = ResourceFactory.createProperty(SKOS_PREFIX + "prefLabel");
	public static final Property SKOS_ALT_LABEL = ResourceFactory.createProperty(SKOS_PREFIX + "altLabel");
	public static final Property SKOS_RELATED = ResourceFactory.createProperty(SKOS_PREFIX + "related");
	public static final Property SKOS_DEFINITION = ResourceFactory.createProperty(SKOS_PREFIX + "definition");
	public static final Property SKOS_EXAMPLE = ResourceFactory.createProperty(SKOS_PREFIX + "example");

	public static final Property RDFS_LABEL = ResourceFactory.createProperty(RDFS_PREFIX + "label");
	public static final Property RDFS_SEE_ALSO = ResourceFactory.createProperty(RDFS_PREFIX + "seeAlso");

	public static final Property DCT_TITLE = ResourceFactory.createProperty(DCT_PREFIX + "title");
	public static final Property DCT_CREATOR = ResourceFactory.createProperty(DCT_PREFIX + "creator");
	public static final Property DCT_IDENTIFIER = ResourceFactory.createProperty(DCT_PREFIX + "identifier");
	public static final Property DCT_DESCRIPTION = ResourceFactory.createProperty(DCT_PREFIX + "description");
	public static final Property DCT_HAS_PART = ResourceFactory.createProperty(DCT_PREFIX + "hasPart");
	public static final Property OWL_TOPOBJECTPROPERTY = ResourceFactory.createProperty(OWL_PREFIX + "topObjectProperty");
	public static final Property FOAF_FIRSTNAME = ResourceFactory.createProperty(FOAF_PREFIX + "firstName");
	public static final Property FOAF_FAMILYNAME = ResourceFactory.createProperty(FOAF_PREFIX + "familyName");
	public static final Property FOAF_NAME = ResourceFactory.createProperty(FOAF_PREFIX + "name");

	public static final Property DCT_MODIFIED = ResourceFactory.createProperty(DCT_PREFIX + "modified");
	public static final Property DCT_CREATED = ResourceFactory.createProperty(DCT_PREFIX + "created");
	public static final Property DCT_PUBLISHER = ResourceFactory.createProperty(DCT_PREFIX + "publisher");
	public static final Property OWL_DEPRECATED = ResourceFactory.createProperty(OWL_PREFIX + "deprecated");
	public static final Property DCT_IS_REPLACED_BY = ResourceFactory.createProperty(DCT_PREFIX + "isReplacedBy");

	public static final Property QB_STRUCTURE = ResourceFactory.createProperty(QB_PREFIX + "structure");
	public static final Property QB_COMPONENT = ResourceFactory.createProperty(QB_PREFIX + "component");
	public static final Property QB_DIMENSION = ResourceFactory.createProperty(QB_PREFIX + "dimension");
	public static final Property QB_MEASURE = ResourceFactory.createProperty(QB_PREFIX + "measure");
	public static final Property ADF_DC_COMPONENT_DATATYPE = ResourceFactory.createProperty(ADF_DC_PREFIX + "componentDataType");
	public static final Resource ADF_DC_DIMENSION = ResourceFactory.createResource(ADF_DC_PREFIX + "Dimension");
	public static final Resource ADF_DC_MEASURE = ResourceFactory.createResource(ADF_DC_PREFIX + "Measure");
	public static final Resource ADF_DP_FILE = ResourceFactory.createResource(ADF_DP_PREFIX + "File");
	public static final Property ADF_DP_REPRESENTED_BY = ResourceFactory.createProperty(ADF_DP_PREFIX + "representedBy");

	public static final Resource AFM_MATERIAL = ResourceFactory.createResource(AFM_PREFIX + "AFM_0000275");
	public static final Resource AFM_MOBILE_PHASE = ResourceFactory.createResource(AFM_PREFIX + "AFM_0000064");
	public static final Resource AFM_STATIONARY_PHASE = ResourceFactory.createResource(AFM_PREFIX + "AFM_0000024");
	public static final Resource AFM_DILUENT = ResourceFactory.createResource(AFM_PREFIX + "AFM_0000147");
	public static final Resource AFM_SAMPLE = ResourceFactory.createResource(AFM_PREFIX + "AFM_0000257");
	public static final Resource AFM_CHEMICAL_ENTITY = ResourceFactory.createResource(AFM_PREFIX + "AFM_0000094");

	public static final Resource AFR_RESULT = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000207");
	public static final Resource AFR_REPORT = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000830");
	public static final Resource AFR_STRUCTURE_DATA = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000064");
	public static final Resource AFR_ELECTRONIC_LAB_NOTEBOOK = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000882");
	public static final Resource AFR_ABSORPTION_CHROMATOGRAM = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000436");
	public static final Resource AFR_FILE = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000639");
	public static final Resource AFR_SCALAR_QUANTITY_DATUM = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000989");

	public static final Resource AFE_DEVICE = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000354");
	public static final Resource OBI_DEVICE = ResourceFactory.createResource(OBI_PREFIX + "_0000968");
	public static final Resource AFE_SFC = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000673");
	public static final Resource AFE_COLUMN = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000217");
	public static final Resource AFE_GUARD_COLUMN = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000430");
	public static final Resource AFE_VIAL = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000329");
	public static final Resource AFE_RACK = ResourceFactory.createResource(AFE_PREFIX + "AFE_0001188");
	public static final Resource AFE_TRAY = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000540");
	public static final Resource AFE_DETECTOR = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000317");
	public static final Resource AFE_PUMP = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000499");
	public static final Resource AFE_OVEN = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000816");
	public static final Resource AFE_CHROMATOGRAPH = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000392");
	public static final Resource AFE_SYSTEM = ResourceFactory.createResource(AFE_PREFIX + "AFE_0000074");
	public static final Resource AFE_COMPUTER = ResourceFactory.createResource(AFE_PREFIX + "AFE_0001695");

	public static final Resource AFP_PROCESS = ResourceFactory.createResource(AFP_PREFIX + "AFP_0001617");
	public static final Resource AFP_SEPARATION_METHOD = ResourceFactory.createResource(AFP_PREFIX + "AFP_0000422");
	public static final Resource AFP_DATA_PROCESSING = ResourceFactory.createResource(AFP_PREFIX + "AFP_0000307");
	public static final Resource AFP_PRINTING = ResourceFactory.createResource(AFP_PREFIX + "AFP_0003147");
	public static final Resource AFP_MIXING = ResourceFactory.createResource(AFP_PREFIX + "AFP_0001135");
	public static final Resource AFP_PLAN = ResourceFactory.createResource(AFP_PREFIX + "AFP_0002039");
	public static final Resource AFP_PROJECT = ResourceFactory.createResource(AFP_PREFIX + "AFP_0003126");
	public static final Resource AFP_DETECTION = ResourceFactory.createResource(AFP_PREFIX + "AFP_0000925");
	public static final Resource AFP_UV_DETECTION = ResourceFactory.createResource(AFP_PREFIX + "AFP_0000246");
	public static final Resource AFP_SCAN = ResourceFactory.createResource(AFP_PREFIX + "AFP_0001146");
	public static final Resource AFP_START = ResourceFactory.createResource(AFP_PREFIX + "AFP_0002613");
	public static final Resource AFP_STOP = ResourceFactory.createResource(AFP_PREFIX + "AFP_0001299");
	public static final Resource AFP_PROCESS_COMMAND = ResourceFactory.createResource(AFP_PREFIX + "AFP_0001765");

	public static final Property AFX_INDEX = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000684");
	public static final Property AFX_MANUFACTURER = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000333");
	public static final Property AFX_HAS_VALUE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000690");
	public static final Property AFX_BARCODE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000687");
	public static final Property AFX_TOTAL_CELL_COUNT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000608");
	public static final Property AFX_MEASUREMENT_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000092");
	public static final Property AFX_ABSORBANCE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000135");
	public static final Property AFX_INTENSITY = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000361");
	public static final Property AFX_TOTAL_RETENTION_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000076");
	public static final Property AFX_WAVELENGTH = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000026");
	public static final Property AFX_TOTAL_ION_CURRENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000163");
	public static final Property AFX_HAS_SPECTRUM = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001856");
	public static final Property AFX_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000072");
	public static final Property AFX_SELECTS = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000197");
	public static final Property AFX_RESULT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000545");
	public static final Property AFX_HAS_PART = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000394");
	public static final Property AFX_HAS_FUNCTION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000964");
	public static final Property AFX_HAS_COMPONENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000972");
	public static final Property AFX_HAS_METHOD_FILE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000398");
	public static final Property AFX_COLUMN_LENGTH = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000904");
	public static final Property AFX_COLUMN_INNER_DIAMETER = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000913");
	public static final Property AFX_HAS_INITIAL_CONDITION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000400");
	public static final Property AFX_HAS_CONDITION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000408");
	public static final Property AFX_HAS_EVENT_TABLE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000402");
	public static final Property AFX_HAS_EVENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000404");
	public static final Property AFX_HAS_PROPERTY = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001144");
	public static final Property AFX_HAS_SUBJECT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000382");
	public static final Property AFX_HAS_OBJECT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000396");
	public static final Property AFX_COLUMN_TEMPERATURE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001891");
	public static final Property AFX_DEVICE_SERIAL_NUMBER = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001136");
	public static final Property AFX_DETECTION_WAVELENGTH = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000027");
	public static final Property AFX_HAS_CHANNEL = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000965");
	public static final Property AFX_POST_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001874");
	public static final Property AFX_HAS_DATA_OUTPUT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000544");
	public static final Property AFX_PUMP_FLOW_RATE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001005");
	public static final Property AFX_RATIO = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000245");
	public static final Property AFX_HAS_COMMAND_SEQUENCE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000540");
	public static final Property AFX_HAS_COMMAND = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000539");
	public static final Property AFX_EVENT_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000430");
	public static final Property AFX_EVENT_DURATION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000431");
	public static final Property AFX_HAS_MOBILE_PHASE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000397");
	public static final Property AFX_HAS_STATIONARY_PHASE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000383");
	public static final Property AFX_HAS_PEAK_LIST = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001183");
	public static final Property AFX_HAS_PEAK = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001184");
	public static final Property AFX_PEAK_ELUTION_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000088");
	public static final Property AFX_PEAK_HEIGHT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000287");
	public static final Property AFX_PEAK_AREA = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000291");
	public static final Property AFX_RELATIVE_PEAK_AREA = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000229");
	public static final Property AFX_IS_PART_OF = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000352");
	public static final Property AFX_PRESSURE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000001");
	public static final Property AFX_HAS_MATERIAL_INPUT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000696");
	public static final Property AFX_HAS_MATERIAL_OUTPUT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000546");
	public static final Property AFX_HAS_SAMPLE_INPUT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000543");
	public static final Property AFX_HAS_SAMPLE_OUTPUT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000547");
	public static final Property AFX_HAS_DILUENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000405");
	public static final Property AFX_INJECTION_VOLUME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000122");
	public static final Property AFX_IDENTIFIER = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000686");
	public static final Property AFX_PARTICLE_SIZE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000296");
	public static final Property AFX_SIZE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000804");
	public static final Property AFX_TRACE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001883");
	public static final Property AFX_CAPILLARY_CURRENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001066");
	public static final Property AFX_CURRENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001148");
	public static final Property AFX_DESOLVATION_TEMPERATURE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_000076");
	public static final Property AFX_FRAGMENTOR_VOLTAGE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_000992");
	public static final Property AFX_NOTEBOOK_REFERENCE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001894");
	public static final Property AFX_HAS_NOTEBOOK_SECTION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001895");
	public static final Property AFX_IUPAC_NAME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001878");
	public static final Property AFX_TRIVIAL_NAME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001876");
	public static final Property AFX_MOL_WEIGHT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000042");
	public static final Property AFX_HAS_PROJECT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001893");
	public static final Property AFX_CHEMICAL_STRUCTURE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001877");
	public static final Property AFX_SUBMISSION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001888");
	public static final Property AFX_SUBMITTED_BY = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001885");
	public static final Property AFX_EXECUTED_BY = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000428");
	public static final Property AFX_INGREDIENT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000365");
	public static final Property AFX_OVEN_TEMPERATURE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000781");
	public static final Property AFX_ACQUISITION_TIME = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000111");
	public static final Property AFX_CONTAINED_IN = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001049");
	public static final Property AFX_POSITION = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000863");
	public static final Property AFX_CONTAINS = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001048");
	public static final Property AFX_WIDTH = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000937");
	public static final Property AFX_HEIGHT = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000924");
	public static final Property AFX_COLOR = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000461");
	public static final Property AFX_THICKNESS = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0001146");
	public static final Property AFX_MINIMUM_VALUE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000670");
	public static final Property AFX_MAXIMUM_VALUE = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000674");
	public static final Property AFX_MPERZ = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0000337");

	public static final Property AFDC_SELECTS = ResourceFactory.createProperty(AFDC_PREFIX + "selects");
	public static final Property AFDC_HAS_ITEM = ResourceFactory.createProperty(AFDC_PREFIX + "hasItem");
	public static final Property AFDC_SELECTION_ON = ResourceFactory.createProperty(AFDC_PREFIX + "selectionOn");
	public static final Resource AFDC_DIMENSION = ResourceFactory.createResource(AFDC_PREFIX + "Dimension");
	public static final Resource AFDC_MEASURE = ResourceFactory.createResource(AFDC_PREFIX + "Measure");
	public static final Resource AFDC_DIMENSION_SELECTION = ResourceFactory.createResource(AFDC_PREFIX + "DimensionSelection");
	public static final Resource AFDC_MEASURE_SELECTION = ResourceFactory.createResource(AFDC_PREFIX + "MeasureSelection");

	public static final Property PAV_RETRIEVED_FROM = ResourceFactory.createProperty(PAV_PREFIX + "retrievedFrom");
	public static final Property PAV_VERSION = ResourceFactory.createProperty(PAV_PREFIX + "version");
	public static final Property PAV_PREVIOUS_VERSION = ResourceFactory.createProperty(PAV_PREFIX + "previousVersion");
	public static final Property PAV_WAS_GENERATED_BY = ResourceFactory.createProperty(PAV_PREFIX + "wasGeneratedBy");
	public static final Property PAV_DERIVED_FROM = ResourceFactory.createProperty(PAV_PREFIX + "derivedFrom");
	public static final Property PAV_IMPORTED_FROM = ResourceFactory.createProperty(PAV_PREFIX + "importedFrom");

	public static final Resource AFR_TOTAL_ION_CHROMATOGRAM = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000462");
	public static final Resource AFR_UV_SPECTRUM = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000246");
	public static final Resource AFR_ESI_SPECTRUM = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000185");
	public static final Resource AFR_TIME_SERIES = ResourceFactory.createResource(AFR_PREFIX + "AFR_0000576");
	public static final Resource AFRL_CONTEXTUAL_ROLE = ResourceFactory.createResource(AFRL_PREFIX + "AFRL_0000166");

	public static final Property PROV_WAS_DERIVED_FROM = ResourceFactory.createProperty(PROV_PREFIX + "wasDerivedFrom");
	public static final Property VOID_FEATURE = ResourceFactory.createProperty(VOID_PREFIX + "feature");
	public static final Property VOID_VOCABULARY = ResourceFactory.createProperty(VOID_PREFIX + "vocabulary");
	public static final Resource FOAF_ORGANIZATION = ResourceFactory.createResource(FOAF_PREFIX + "Organization");

	public static final Resource AFMAP_MAPPING = ResourceFactory.createResource(AFMAP_PREFIX + "Mapping");
	public static final Property AFMAP_SOURCE = ResourceFactory.createProperty(AFMAP_PREFIX + "source");
	public static final Property AFMAP_TARGET = ResourceFactory.createProperty(AFMAP_PREFIX + "target");
	public static final Property AFMAP_MAPPINGRELATION = ResourceFactory.createProperty(AFMAP_PREFIX + "mappingRelation");
	public static final Property OWL_EQUIVALENT_CLASS = ResourceFactory.createProperty(OWL_PREFIX + "equivalentClass");
	public static final Property OWL_SAME_AS = ResourceFactory.createProperty(OWL_PREFIX + "sameAs");
	public static final Property SKOS_SCOPE_NOTE = ResourceFactory.createProperty(SKOS_PREFIX + "scopeNote");
	public static final Property SKOS_CLOSE_MATCH = ResourceFactory.createProperty(SKOS_PREFIX + "closeMatch");
	public static final Property SKOS_EXACT_MATCH = ResourceFactory.createProperty(SKOS_PREFIX + "exactMatch");
	public static final Property SKOS_CHANGE_NOTE = ResourceFactory.createProperty(SKOS_PREFIX + "changeNote");
	public static final Property SKOS_EDITORIAL_NOTE = ResourceFactory.createProperty(SKOS_PREFIX + "editorialNote");
	public static final Property AFX_IS_ALIGNED_WITH_BFO = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0002797");
	public static final Property AFX_IS_DEFINED_CLASS = ResourceFactory.createProperty(AFX_PREFIX + "AFX_0002798");

	public static final Resource BFO_OCCURRENT = ResourceFactory.createResource(BFO_PREFIX + "_0000003");
	public static final Resource BFO_QUALITY = ResourceFactory.createResource(BFO_PREFIX + "_0000019");
	public static final Resource BFO_ROLE = ResourceFactory.createResource(BFO_PREFIX + "_0000023");
	public static final Resource BFO_FUNCTION = ResourceFactory.createResource(BFO_PREFIX + "_0000034");
	public static final Resource BFO_MATERIAL = ResourceFactory.createResource(BFO_PREFIX + "_0000040");
	public static final Resource IAO_INFORMATION_CONTENT_ENTITY = ResourceFactory.createResource(IAO_PREFIX + "_0000030");
}
